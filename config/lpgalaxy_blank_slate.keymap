/*
 * Copyright (c) 2022 Pete Johanson
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define NAV_L 1
#define NUM_L 2
#define SYM_L 3


// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

#define BT(n) BT_SEL n

/ {

// Conditional layers all the time!

    cond_layers {
        compatible = "zmk,conditional-layers";
	tri {
	    if-layers = <NUM_L NAV_L>;
	    then-layer = <SYM_L>;
        };
    };


    keymap {
        compatible = "zmk,keymap";

        base_layer {
            label = "Base";
            bindings = <
 &kp ESC    &kp Q      &kp W      &kp E       &kp R          &kp T          &kp Y            &kp U          &kp I       &kp O      &kp P         &kp BKSP
 &kp TAB    &kp A      &kp S      &kp D       &kp F          &kp G          &kp H            &kp J          &kp K       &kp L      &kp SEMI      &kp QUOT
 &kp LSHFT  &kp Z      &kp X      &kp C       &kp V          &kp B          &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH      &kp RSHIFT
 &kp LCTRL  &kp LGUI  &kp BSLH  &kp LALT    &mo NUM_L            &kp SPACE                   &mo NAV_L      &kp LEFT    &kp UP     &kp DOWN      &kp RIGHT

            >;
        };

        nav_layer {
            label = "Nav";
            bindings = <
&kp TILDE   &kp EXCL   &kp AT     &kp HASH    &kp DLLR    &kp PRCNT    &kp CARET      &kp AMPS    &kp STAR   &kp LPAR   &kp RPAR     &kp DEL
&kp DEL     &trans     &trans     &trans      &trans      &trans       &kp LEFT       &kp DOWN    &kp UP     &kp RIGHT  &kp PIPE     &kp GRAVE
&trans      &trans     &trans     &trans      &trans      &trans       &kp MINUS      &kp EQUAL   &kp LBKT   &kp RBKT   &kp BSLH     &kp RET
&trans      &kp K_APP  &trans     &trans      &trans            &kp INS               &trans      &kp HOME   &kp PG_UP  &kp PG_DN    &kp END
            >;
        };

        num_layer {
            label = "Num";
            bindings = <
&kp DEL    &kp N1  &kp N2  &kp N3  &kp N4   &kp N5    &kp N6    &kp KP_N7     &kp KP_N8      &kp KP_N9       &kp KP_N0      &trans
&trans     &kp F1  &kp F2  &kp F3  &kp F4   &kp F5    &kp F6    &kp KP_N4     &kp KP_N5      &kp KP_N6       &kp KP_DOT     &kp KP_MINUS
&trans     &kp F7  &kp F8  &kp F9  &kp F10  &kp F11   &kp F12   &kp KP_N1     &kp KP_N2      &kp KP_N3       &kp KP_PLUS    &kp KP_ENTER
&kp ESC    &trans  &trans  &trans  &trans         &kp N0        &trans        &trans         &trans          &trans         &trans
            >;
        };

        sym_layer {
            label = "Sym";
            bindings = <
&bt BT_CLR  &bt BT(0)  &bt BT(1)  &bt BT(2)  &bt BT(3)  &bt BT(4)    &trans    &out OUT_USB   &trans       &soft_off     &bootloader   &trans
&kp CAPS    &trans     &trans     &trans     &trans     &trans       &trans    &trans         &trans       &trans        &trans        &trans
&kp KP_NUM  &trans     &trans     &trans     &trans     &out OUT_BLE &trans    &trans         &trans       &trans        &trans        &trans
&trans      &trans     &trans     &trans     &trans             &kp C_PP       &trans         &kp C_PREV   &kp C_VOL_DN  &kp C_VOL_UP  &kp C_NEXT
            >;
        };
    };
};

